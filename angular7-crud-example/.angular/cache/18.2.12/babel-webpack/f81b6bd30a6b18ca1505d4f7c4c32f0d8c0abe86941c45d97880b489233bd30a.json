{"ast":null,"code":"import { UntypedFormBuilder, Validators } from \"@angular/forms\";\nimport { Router } from \"@angular/router\";\nimport { ApiService } from \"../core/api.service\";\nimport * as i0 from \"@angular/core\";\nimport * as i1 from \"@angular/forms\";\nimport * as i2 from \"@angular/router\";\nimport * as i3 from \"../core/api.service\";\nimport * as i4 from \"@angular/common\";\nfunction LoginComponent_div_9_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵelementStart(0, \"div\", 11);\n    i0.ɵɵtext(1, \"Username is required\");\n    i0.ɵɵelementEnd();\n  }\n}\nfunction LoginComponent_div_14_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵelementStart(0, \"div\", 11);\n    i0.ɵɵtext(1, \"Password is required\");\n    i0.ɵɵelementEnd();\n  }\n}\nfunction LoginComponent_div_17_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵelementStart(0, \"div\", 11)(1, \"div\");\n    i0.ɵɵtext(2, \"Invalid credentials.\");\n    i0.ɵɵelementEnd()();\n  }\n}\nexport let LoginComponent = /*#__PURE__*/(() => {\n  class LoginComponent {\n    constructor(formBuilder, router, apiService) {\n      this.formBuilder = formBuilder;\n      this.router = router;\n      this.apiService = apiService;\n      this.invalidLogin = false;\n    }\n    onSubmit() {\n      if (this.loginForm.invalid) {\n        return;\n      }\n      const loginPayload = {\n        username: this.loginForm.controls.username.value,\n        password: this.loginForm.controls.password.value\n      };\n      this.apiService.login(loginPayload).subscribe(data => {\n        debugger;\n        if (data.status === 200) {\n          window.localStorage.setItem('token', data.result.token);\n          this.router.navigate(['list-user']);\n        } else {\n          this.invalidLogin = true;\n          alert(data.message);\n        }\n      });\n    }\n    ngOnInit() {\n      window.localStorage.removeItem('token');\n      this.loginForm = this.formBuilder.group({\n        username: ['', Validators.compose([Validators.required])],\n        password: ['', Validators.required]\n      });\n    }\n    static {\n      this.ɵfac = function LoginComponent_Factory(__ngFactoryType__) {\n        return new (__ngFactoryType__ || LoginComponent)(i0.ɵɵdirectiveInject(i1.UntypedFormBuilder), i0.ɵɵdirectiveInject(i2.Router), i0.ɵɵdirectiveInject(i3.ApiService));\n      };\n    }\n    static {\n      this.ɵcmp = /*@__PURE__*/i0.ɵɵdefineComponent({\n        type: LoginComponent,\n        selectors: [[\"app-login\"]],\n        decls: 18,\n        vars: 5,\n        consts: [[1, \"row\"], [1, \"col-md-6\", \"login-container\"], [2, \"margin\", \"auto\"], [3, \"ngSubmit\", \"formGroup\"], [1, \"form-group\"], [\"for\", \"username\"], [\"type\", \"text\", \"formControlName\", \"username\", \"id\", \"username\", \"autocomplete\", \"off\", 1, \"form-control\"], [\"class\", \"error\", 4, \"ngIf\"], [\"for\", \"pwd\"], [\"type\", \"password\", \"formControlName\", \"password\", \"id\", \"pwd\", \"autocomplete\", \"off\", 1, \"form-control\"], [1, \"btn\", \"btn-success\", 3, \"disabled\"], [1, \"error\"]],\n        template: function LoginComponent_Template(rf, ctx) {\n          if (rf & 1) {\n            i0.ɵɵelementStart(0, \"div\", 0)(1, \"div\", 1)(2, \"h2\", 2);\n            i0.ɵɵtext(3, \"Login \");\n            i0.ɵɵelementEnd();\n            i0.ɵɵelementStart(4, \"form\", 3);\n            i0.ɵɵlistener(\"ngSubmit\", function LoginComponent_Template_form_ngSubmit_4_listener() {\n              return ctx.onSubmit();\n            });\n            i0.ɵɵelementStart(5, \"div\", 4)(6, \"label\", 5);\n            i0.ɵɵtext(7, \"UserName:\");\n            i0.ɵɵelementEnd();\n            i0.ɵɵelement(8, \"input\", 6);\n            i0.ɵɵtemplate(9, LoginComponent_div_9_Template, 2, 0, \"div\", 7);\n            i0.ɵɵelementEnd();\n            i0.ɵɵelementStart(10, \"div\", 4)(11, \"label\", 8);\n            i0.ɵɵtext(12, \"Password:\");\n            i0.ɵɵelementEnd();\n            i0.ɵɵelement(13, \"input\", 9);\n            i0.ɵɵtemplate(14, LoginComponent_div_14_Template, 2, 0, \"div\", 7);\n            i0.ɵɵelementEnd();\n            i0.ɵɵelementStart(15, \"button\", 10);\n            i0.ɵɵtext(16, \"Login\");\n            i0.ɵɵelementEnd();\n            i0.ɵɵtemplate(17, LoginComponent_div_17_Template, 3, 0, \"div\", 7);\n            i0.ɵɵelementEnd()()();\n          }\n          if (rf & 2) {\n            i0.ɵɵadvance(4);\n            i0.ɵɵproperty(\"formGroup\", ctx.loginForm);\n            i0.ɵɵadvance(5);\n            i0.ɵɵproperty(\"ngIf\", ctx.loginForm.controls[\"username\"].hasError(\"required\") && ctx.loginForm.controls[\"username\"].touched);\n            i0.ɵɵadvance(5);\n            i0.ɵɵproperty(\"ngIf\", ctx.loginForm.controls[\"password\"].hasError(\"required\") && ctx.loginForm.controls[\"password\"].touched);\n            i0.ɵɵadvance();\n            i0.ɵɵproperty(\"disabled\", ctx.loginForm.invalid);\n            i0.ɵɵadvance(2);\n            i0.ɵɵproperty(\"ngIf\", ctx.invalidLogin);\n          }\n        },\n        dependencies: [i4.NgIf, i1.ɵNgNoValidate, i1.DefaultValueAccessor, i1.NgControlStatus, i1.NgControlStatusGroup, i1.FormGroupDirective, i1.FormControlName],\n        styles: [\".error[_ngcontent-%COMP%]{color:red}.login-container[_ngcontent-%COMP%]{display:flex;flex-direction:column;background-color:#ffebcd;margin:2em auto auto}\"]\n      });\n    }\n  }\n  return LoginComponent;\n})();","map":null,"metadata":{},"sourceType":"module","externalDependencies":[]}